package CucumberFramework.Steps;


import java.util.concurrent.TimeUnit;
import org.junit.Assert;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class LoginStep {
	WebDriver driver;

@Given("^I access webdriveruniversity$")
public void i_access_webdriveruniversity() throws Throwable {
	System.setProperty("webdriver.chrome.driver",   "C:\\Users\\luis_marreiros\\Desktop\\Cucumber\\WebDriverUniversity\\src\\test\\java\\CucumberFramework\\resources\\chromedriver.exe");
	this.driver = new ChromeDriver();
	this.driver.manage().window().maximize();
	this.driver.manage().timeouts().pageLoadTimeout(120, TimeUnit.SECONDS);
}

@When("^I click on the login portal button$")
public void i_click_on_the_login_portal_button() throws Throwable {
	driver.findElement(By.id("login-portal")).click();
}

@When("^I enter username$")
public void i_enter_username() throws Throwable {
	@SuppressWarnings("unused")
	String winHandlerBefore = driver.getWindowHandle();

	for(String winHandler: driver.getWindowHandles()) {
		driver.switchTo().window(winHandler);
	}
	
	driver.findElement(By.id("text")).sendKeys("webdriver");
}

@When("^I enter a \"([^\"]*)\" password$")
public void i_enter_a_password(String password) throws Throwable {
	driver.findElement(By.id("password")).sendKeys(password); 
}

@When("^Iclick on the login button$")
public void iclick_on_the_login_button() throws Throwable {
	driver.findElement(By.id("login-button")).click(); 
}

@Then("^I should be presented wit a successful validation alert$")
public void i_should_be_presented_wit_a_successful_validation_alert() throws Throwable {
	Alert alert = driver.switchTo().alert();
	System.out.println(alert.getText());
	
	Assert.assertEquals(alert.getText(), "validation succeeded");

}

@When("^I click on the login button$")
public void i_click_on_the_login_button() throws Throwable {
	driver.findElement(By.id("login-button")).click();
}
@Then("^I should be presented with a unsuccessful validation alert$")
public void i_should_be_presented_with_a_unsuccessful_validation_alert() throws Throwable {
	Alert alert = driver.switchTo().alert();
	System.out.println(alert.getText());
	
	Assert.assertEquals(alert.getText(), "validation failed");
   
}

}
